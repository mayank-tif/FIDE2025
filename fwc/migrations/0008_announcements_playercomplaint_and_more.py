# Generated by Django 5.2.4 on 2025-10-11 15:48

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('fwc', '0007_transportationtype_playertransportationdetails'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('details', models.TextField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status_flag', models.IntegerField(default=1)),
                ('created_by', models.ForeignKey(blank=True, db_column='createdBy', null=True, on_delete=django.db.models.deletion.SET_NULL, to='fwc.mstuserlogins')),
            ],
            options={
                'db_table': 'Announcements',
            },
        ),
        migrations.CreateModel(
            name='PlayerComplaint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=20)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.IntegerField(null=True)),
                ('updated_by', models.IntegerField(null=True)),
                ('status_flag', models.IntegerField(default=1)),
                ('player', models.ForeignKey(db_column='playerId', on_delete=django.db.models.deletion.CASCADE, to='fwc.players')),
            ],
            options={
                'db_table': 'PlayerComplaint',
            },
        ),
        migrations.CreateModel(
            name='PlayerComplaintConversation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_flag', models.IntegerField(default=1)),
                ('complaint', models.ForeignKey(db_column='complaintId', on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='fwc.playercomplaint')),
                ('sender_player', models.ForeignKey(blank=True, db_column='senderPlayerId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='fwc.players')),
                ('sender_user', models.ForeignKey(blank=True, db_column='senderUserId', null=True, on_delete=django.db.models.deletion.SET_NULL, to='fwc.mstuserlogins')),
            ],
            options={
                'db_table': 'PlayerComplaintConversation',
            },
        ),
        migrations.CreateModel(
            name='AnnouncementRecipients',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_read', models.BooleanField(default=False)),
                ('read_on', models.DateTimeField(blank=True, null=True)),
                ('sent_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_flag', models.IntegerField(default=1)),
                ('player', models.ForeignKey(db_column='playerId', on_delete=django.db.models.deletion.CASCADE, to='fwc.players')),
                ('announcement', models.ForeignKey(db_column='announcementId', on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='fwc.announcements')),
            ],
            options={
                'db_table': 'AnnouncementRecipients',
                'unique_together': {('announcement', 'player')},
            },
        ),
    ]
